---
-   name: Launch the new EC2 Instance
    ec2:
        group: "{{ item.security_group }}"
        instance_type: "{{ item.instance_type }}"
        instance_tags: "{{ item.instance_tags }}"
        image: "{{ image }}"
        wait: yes
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: 1
        assign_public_ip: yes
        vpc_subnet_id: "subnet-f72970d9"
        # exact_count: "{{item.count}}"
        # count_tag: "{{ item.instance_tags }}"
        state: present
        # instance_ids: "{{ item.instance_ids }}"
    loop: "{{ instances }}"
    register: ec2

# - debug: msg="{{ec2.results}}"
- debug: msg="{{ec2.results[0].instances[0].public_ip}}"
# - debug: var="{{ec2.results[0].instances[0].tags.name}}"



-   name: Set LB IP fact
    set_fact:
        lb_ip: "{{item.instances[0].public_ip}}"
    with_items:
        "{{ec2.results}}"
    when: item.item.instance_tags.name == "loadBalancer"


-   name: SHit debug
    debug:
        msg: "{{lb_ip}}"
# 
-   name: Set domain to ip in AWS (route53)
    route53:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ aws_session_token }}"
        state: present
        zone: "{{ domain_name }}"
        record: "{{ item }}"
        value: "{{lb_ip}}"
        type: A
        overwrite: yes
        wait: yes
    with_items:
        -   "{{ domain_name}}"
        -   "www.{{ domain_name}}"


-   name: Wait for SSH to come up
    wait_for:
        host: "{{ item.instances.0.public_ip}}"
        port: 22
        state: started
    with_items: "{{ ec2.results}}"

# -   debug: msg="{{rec}}"
# -   import_tasks: setup_domain.yml
    # when: 