---
# this package is required to use the pip module
-   name: Install pip
    apt:
        name:
            -   python3-pip
            -   python-mysqldb # needed for ansible
        state: present

# this is the required pip package
-   name: Install PyMySQL pip package
    pip:
        name: PyMySQL
        executable: pip3

-   name: Pre check before installing Oracle MySQL Server8.0.
    shell: ps aux | grep mysql | grep -v grep
    ignore_errors: yes
    register: mysql_proc_status

-   name: Install dependencies
    apt:
        state: present
        pkg: "{{ apt_packages}}"
    notify: restart mysql
    when: mysql_proc_status.failed == true or mysql_force_installation == true

-   name: update mysql root password for all root accounts
    mysql_user: 
        name: root 
        host: "{{ item }}" 
        password: "{{ db_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock # https://serverfault.com/a/942506
        # login_user: root
        # login_password: "{{ db_root_password }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
    with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
    notify: restart mysql

-   name: Create `/root/.my.cnf`  with root password credentials
    template:
        src:  my.cnf.j2
        dest: /root/.my.cnf
        # dest: ~/.my.cnf
        owner: root
        mode: 0600

-   name: Removes anonymous user account for localhost
    become: yes
    become_method: sudo
    mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock # https://serverfault.com/a/942506
        name: ''
        host_all: yes
        state: absent

-   name: Remove the test database
    mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock # https://serverfault.com/a/942506
        name: test
        state: absent
    notify:
        - restart mysql

-   name: Create database
    mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock # https://serverfault.com/a/942506
        name: "{{ db_name }}"
        encoding: utf8
        collation: utf8_bin
        state: present

-   debug: msg="{{ groups.appServer }}"

-   name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
    mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock # https://serverfault.com/a/942506
        name: "{{ db_user }}"
        password: "{{ db_user_password }}"
        priv: '{{ db_name }}.*:ALL'
        host: "{{ groups['appServer'][0] }}"
        # host_all: yes
        state: present

-   name: Change bind address for mysql
    lineinfile:
        path: "/etc/mysql/mariadb.conf.d/50-server.cnf"
        regexp: '^bind-address'
        line: "bind-address            = 0.0.0.0"
    notify: restart mysql