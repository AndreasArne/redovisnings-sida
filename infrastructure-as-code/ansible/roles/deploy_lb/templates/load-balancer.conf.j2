http {
    upstream app-hosts {
        {{ lb_method }};
        server {{ groups['appServer'][0] }}:8000;
    }

    # securing for Zap
    # Cookie No HttpOnly Flag [10010]
    # Cookie Without Secure Flag [10011]
    # Cookie Without SameSite Attribute [10054]
    proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # This server accepts all traffic to port 80 and passes it to the upstream. 
    # Notice that the upstream name and the proxy_pass need to match.

    server {
       listen 80;
       server_name  {{ domain_name }} www.{{ domain_name }};
       return 301 https://$server_name$request_uri;
    
       #location / {
       #   proxy_pass http://app-hosts;
       #}
    }
    server {
       listen 443 ssl;
       server_name  {{ domain_name }} www.{{ domain_name }};
       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
       ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/cert.pem;
       ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

       location / {
           # X-Content-Type-Options Header Missing [10021]
           add_header X-Content-Type-Options nosniff;
           # X-Frame-Options Header Not Set [10020]
           add_header X-Frame-Options "SAMEORIGIN";
           # Incomplete or No Cache-control and Pragma HTTP Header Set [10015]
           add_header x-xss-protection "1; mode=block" always;
           proxy_pass http://app-hosts;
       }
    }
}