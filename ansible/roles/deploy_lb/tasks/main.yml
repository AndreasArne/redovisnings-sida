---
# -   name: Add certbot repository
#     apt_repository:
#         repo: ppa:certbot/certbot
# 
-   name: Install packages
    apt:
        name: "{{ packages }}"
        state: present

-   name: Check if certificate already exists.
    stat:
        path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
    register: letsencrypt_cert

-   debug: msg="{{ letsencrypt_cert.stat.exists }}"

-   name: Stop services to allow certbot to generate a cert.
    command: service nginx stop
    when: not letsencrypt_cert.stat.exists

-   name: Generate new certificate if one doesn't exist.
    shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}"
    when: not letsencrypt_cert.stat.exists

-   name: Remove default conf
    file:
        state: absent
        path: /etc/nginx/sites-enabled/default

# Gist for configs https://gist.github.com/AndreasArne/58374253123a31bb7c32e2b551fe8492
-   name: Template nginx config to server
    template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        force: yes

-   name: Template nginx site config to server
    template:
        src: load-balancer.conf.j2
        dest: /etc/nginx/sites-available/load-balancer.conf

-   name: Link site to enabled
    file:
        state: link
        force: yes
        src: /etc/nginx/sites-available/load-balancer.conf
        path: /etc/nginx/sites-enabled/load-balancer.conf

-   name: Start services after cert has been generated.
    command: service nginx restart
